services:
  magic-platform:
    env_file:
      - .env.dev
    build:
      context: .
    command: /app/run_app.sh mage start $PROJECT_NAME
    deploy:
      resources:
        limits:
          memory: 45G  
          cpus: '20.0'  
    ports:
      - 6789:6789
      - 6000:6000
    volumes:
      - .:/$MAGE_CODE_PATH
      - ~/.mage_data:/$MAGE_CODE_PATH/mage_data
      - ~/.aws:/root/.aws
      - ~/.ssh:/root/.ssh:ro
      - ~/.gitconfig:/root/.gitconfig:ro
      - /Data:/app/data
    restart: on-failure:5
    networks:
      - app-network
    depends_on:
      - magic-database
    stdin_open: true
    tty: true


  magic-database:
    image: pgvector/pgvector:0.6.0-pg16
    env_file:
      - .env.dev
    ports:
      - 5432:5432
    volumes:
      - ~/.postgres/data:/var/lib/postgresql/data
      - ./scripts/database:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - app-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.15.1
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
       - ./mlruns:/mlflow/mlruns
    environment:
       MLFLOW_BACKEND_STORE_URI: sqlite:///mlflow.db
       MLFLOW_ARTIFACT_ROOT: /mlflow/mlruns
    command: mlflow server --backend-store-uri ${MLFLOW_BACKEND_STORE_URI} --default-artifact-root ${MLFLOW_ARTIFACT_ROOT} --host 0.0.0.0 --port 5000
    networks:
      - app-network

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    ports:
      - "5433:5432"
    networks:
      - back-tier

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - back-tier
      - front-tier  

  grafana:
    image: grafana/grafana-enterprise
    user: "472"
    ports:
      - "3000:3000"
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./config/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
    networks:
      - back-tier
      - front-tier
    restart: always

networks:
  app-network:
  front-tier:
  back-tier:

volumes: 
  grafana_data: {}
